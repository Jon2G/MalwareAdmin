using Kit.Model;
using Kit.Razor.Interfaces;
using MalwareAdmin.Models;

namespace MalwareAdmin.ViewModels
{
    public class CommandLineViewModel : ModelBase
    {
        private int CollectionCount => ConsoleOutputs.Count;
        public List<ConsoleOutput> ConsoleOutputs { get; set; }
        public IStateHasChanged StateHasChanged;
        public string Command { get; set; }

        public CommandLineViewModel()
        {
            ConsoleOutputs = new List<ConsoleOutput>();
        }

        public void SendCommand()
        {
            Command = Command.Trim();
            if (!string.IsNullOrEmpty(Command))
            {
                Log(Command);
            }
            Command = string.Empty;
        }
        public void Log(string text, bool isError = false)
        {
            Log(new ConsoleOutput()
            {
                Text = text,
                IsError = isError
            });
        }

        private void Log(ConsoleOutput consoleOutput)
        {
            ConsoleOutputs.Add(consoleOutput);
            if (CollectionCount > 50)
            {
                foreach (var output in ConsoleOutputs.Take(10))
                {
                    ConsoleOutputs.Remove(output);
                }
                return;
            }
            StateHasChanged?.Refresh();
        }
    }
}
