using AsyncAwaitBestPractices;
using Kit.Services.Interfaces;
using MalwareAdmin.Models.Files;
using MalwareAdmin.ViewModels;
using System;
using System.Threading.Tasks;

namespace MalwareAdmin.Views
{
    /// <summary>
    /// Interaction logic for UnZipProgressView.xaml
    /// </summary>
    public partial class UnZipProgressView
    {

        public UnZipProgressViewModel Model { get; set; }
        private readonly Action<ICrossWindow, UnZipProgressViewModel> UnzipAction;
        public UnZipProgressView(ZipFileObject file, Action<ICrossWindow, UnZipProgressViewModel> Unzip)
        {
            Model = new UnZipProgressViewModel(file);
            UnzipAction = Unzip;
            this.DataContext = Model;
            InitializeComponent();
            this.Activated += UnZipProgressView_Activated;
        }

        private void UnZipProgressView_Activated(object? sender, System.EventArgs e)
        {
            this.Activated -= UnZipProgressView_Activated;
            Task.Delay(200).ContinueWith((t) =>
            {
                Task.Run(() => UnzipAction?.Invoke(this, this.Model)).SafeFireAndForget();
            }).SafeFireAndForget();
        }
    }
}
