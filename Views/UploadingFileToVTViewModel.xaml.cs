using AsyncAwaitBestPractices;
using Kit;
using Kit.Enums;
using MalwareAdmin.Models.Files;
using System.Windows;

namespace MalwareAdmin.Views
{
    /// <summary>
    /// Interaction logic for UploadingFileToVTViewModel.xaml
    /// </summary>
    public partial class UploadingFileToVTViewModel : Window
    {
        public FileObject File { get; set; }
        public UploadingFileToVTViewModel(FileObject file)
        {
            File = file;
            InitializeComponent();
            this.Activated += UploadingFileToVTViewModel_Activated;
        }

        private void UploadingFileToVTViewModel_Activated(object? sender, System.EventArgs e)
        {
            this.Activated -= UploadingFileToVTViewModel_Activated;
            VirusTotalNet.VirusTotal.V3.ScanFileAsync(this.File.File).ContinueWith(t =>
            {
                var scan = t.Result;
                if (scan is null)
                {
                    Tools.Instance.Dialogs.CustomMessageBox.Show("No fue posible solicitar el escaneo", "Error",
                        CustomMessageBoxButton.OK, CustomMessageBoxImage.Error).SafeFireAndForget();
                    return;
                }

                File.DownloadReportFromVT().ContinueWith(t =>
                {

                }).SafeFireAndForget();
            }).SafeFireAndForget();
            //var scan = (VirusTotalNet.Results.v3.ScanResult)await VirusTotalNet.VirusTotal.V3.ScanFileAsync(this.File);
            //AnalysisData.Save();
        }
    }
}
