using AsyncAwaitBestPractices;
using MalwareAdmin.Models.Files;
using Microsoft.AspNetCore.Components;

namespace MalwareAdmin.Popovers
{
    public partial class UploadFilePopOver
    {
        [Parameter]
        public bool Fixed
        {
            get => Popover?.IsFixed ?? true;
            set
            {
                if (Popover is not null)
                    Popover.IsFixed = value;
            }
        }


        public MudPopoverBase Popover { get; set; }
        [Parameter]
        public EventCallback<FolderObject> FolderChanged { get; set; }

        private FolderObject _Folder;
        [Parameter]
        public FolderObject Folder
        {
            get => _Folder;
            set
            {
                if (value != _Folder)
                {
                    _Folder = value;
                    OnFolderChanged(value);
                }
            }
        }
        void OnFolderChanged(FolderObject value)
        {
            Folder = value;
            FolderChanged.InvokeAsync(value).SafeFireAndForget();
        }

        public UploadFilePopOver() : base()
        {

        }

        protected override void OnAfterRender(bool firstRender)
        {
            base.OnAfterRender(firstRender);
            Popover.IsFixed = this.Fixed;
        }

        public async Task<UploadFilePopOver> ShowDialog()
        {
            await Popover.ShowDialog();
            return this;
        }

        private void Close() => Popover.Close();
    }
}