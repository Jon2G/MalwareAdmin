using Kit.Extensions;
using System;
using System.IO;
using System.Windows.Media.Imaging;

namespace MalwareAdmin.Models.Files
{
    public class FileObject : ObjectExplorer
    {
        public string Extension { get; set; }
        private bool _IsSelected;
        public bool IsSelected
        {
            get => _IsSelected;
            set => RaiseIfChanged(ref _IsSelected, value);
        }
        public Command<FileObject> OnClickCommand { get; set; }
        public FileInfo File => new FileInfo(Path);
        public FileObject(string Path, FolderObject parent) : this(new FileInfo(Path), parent)
        {

        }

        public FileObject(FileInfo file, FolderObject parent) : base(parent, file)
        {
            OnClickCommand = new Command<FileObject>(OnClick);
            if (!string.IsNullOrEmpty(file.Extension))
            {
                Extension = file.Extension.Substring(1, file.Extension.Length - 1);
                Icon = GetIcon();
            }
        }



        private void OnClick(FileObject file)
        {
            Parent.RemoveSelection();
            file.IsSelected = true;
        }
        protected override string GetIcon()
        {
            if (Extension is null) return "/Imgs/FileIcons/unknown.png";
            try
            {
                string imgPath = $"/Imgs/FileIcons/{Extension}.png";
                string resourceName = $"pack://application:,,,{imgPath}";
                _ = new BitmapImage(new Uri(resourceName, UriKind.Absolute));
                return imgPath;
            }
            catch (Exception)
            {
                return "/Imgs/FileIcons/unknown.png";
            }
        }

        protected override void _Delete()
        {
            if (File.Exists)
                File.Delete();
        }
    }
}
