using Kit;
using MalwareAdmin.Data;
using MalwareAdmin.Models;
using Microsoft.AspNetCore.Components;
using VirusTotalNet;

namespace MalwareAdmin.Utils
{
    public static class VirusTotalUtils
    {
        public static async Task<bool> ConfigureVT()
        {
            await Task.Yield();
            if (VirusTotal.V3 is not null)
            {
                return true;
            }
            VirusTotalSettings settings = VirusTotalSettings.Get();
            if (!string.IsNullOrEmpty(settings.ApiKey))
            {
                VirusTotal.Configure(settings.ApiKey);
                return true;
            }
            MalwareAdmin.Popovers.VTConfigurePopover? vtConfigure = await Kit.Tools.Container.Get<Radzen.DialogService>().OpenAsync("Configuración virus total",
            childContent:
            ds =>
            {
                RenderFragment content(Type t) => builder =>
                {
                    builder.OpenComponent<MalwareAdmin.Popovers.VTConfigurePopover>(0);
                    builder.AddAttribute(1, nameof(MalwareAdmin.Popovers.VTConfigurePopover.Settings), settings);
                    builder.CloseComponent();
                };
                return content(typeof(MalwareAdmin.Popovers.VTConfigurePopover));
            },
            new Radzen.DialogOptions()
            {
                Resizable = false,
                Draggable = false,
                AutoFocusFirstElement = true,
                CloseDialogOnEsc = false,
                ShowClose = false,
                ShowTitle = true,
                CloseDialogOnOverlayClick = false
            }) as MalwareAdmin.Popovers.VTConfigurePopover;
            if (vtConfigure is null || vtConfigure.Settings is null || string.IsNullOrEmpty(vtConfigure.Settings.ApiKey) || vtConfigure.Settings.ApiKey.Length < 64)
                return false;
            vtConfigure.Settings.Save();
            return await VirusTotalUtils.ConfigureVT();
        }
        public static async Task<bool> ConfigureViperInfo()
        {
            await Task.Yield();
            ViperInfo info = AppData.ViperInfo;
            if (!string.IsNullOrEmpty(info.Path))
            {
                return true;
            }
            MalwareAdmin.Popovers.ViperConfigurePopover? vpConfigure = await Kit.Tools.Container.Get<Radzen.DialogService>().OpenAsync("Configuración virus total",
            childContent:
            ds =>
            {
                RenderFragment content(Type t) => builder =>
                {
                    builder.OpenComponent<MalwareAdmin.Popovers.ViperConfigurePopover>(0);
                    builder.AddAttribute(1, nameof(MalwareAdmin.Popovers.ViperConfigurePopover.Info), info);
                    builder.CloseComponent();
                };
                return content(typeof(MalwareAdmin.Popovers.VTConfigurePopover));
            },
            new Radzen.DialogOptions()
            {
                Resizable = false,
                Draggable = false,
                AutoFocusFirstElement = true,
                CloseDialogOnEsc = false,
                ShowClose = false,
                ShowTitle = true,
                CloseDialogOnOverlayClick = false
            }) as MalwareAdmin.Popovers.ViperConfigurePopover;
            if (vpConfigure is null || vpConfigure.Info is null || string.IsNullOrEmpty(vpConfigure.Info.Path))
                return false;
            vpConfigure.Info.Save();
            AppData._ViperInfo.Reset();
            return await VirusTotalUtils.ConfigureViperInfo();
        }
    }
}
