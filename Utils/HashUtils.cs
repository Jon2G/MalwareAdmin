using Hyldahl.Hashing.SpamSum;
using System.Text;

namespace MalwareAdmin.Utils
{
    public static class HashUtils
    {
        public static async Task<string> GetFuzzyHash(byte[] buffer)
        {
            using (MemoryStream ms = new MemoryStream(buffer))
                return await GetFuzzyHash(ms);
        }

        public static async Task<string> GetFuzzyHash(string content, Encoding encoding = null)
        {
            encoding = encoding ?? Encoding.UTF8;

            using (MemoryStream ms = new MemoryStream(encoding.GetBytes(content)))
                return await GetFuzzyHash(ms);
        }

        public static async Task<string> GetFuzzyHash(FileInfo file)
        {
            if (!file.Exists)
                throw new FileNotFoundException("File not found.", file.FullName);

            using (FileStream stream = file.OpenRead())
                return await GetFuzzyHash(stream);
        }

        public static async Task<string> GetFuzzyHash(Stream stream)
        {
            await Task.Yield();
            SpamSumSignature signature = FuzzyHashing.Calculate(stream);
            return signature.ToString();
        }
    }
}
